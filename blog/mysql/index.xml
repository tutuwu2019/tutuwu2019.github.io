<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mysql on 张不大的博客</title>
    <link>https://tutuwu2019.github.io/blog/mysql/</link>
    <description>Recent content in mysql on 张不大的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2024, zhangbdua.</copyright>
    <lastBuildDate>Sun, 29 Dec 2024 23:57:55 +0800</lastBuildDate><atom:link href="https://tutuwu2019.github.io/blog/mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis手册(自用)</title>
      <link>https://tutuwu2019.github.io/redis%E6%89%8B%E5%86%8C%E8%87%AA%E7%94%A8/</link>
      <pubDate>Sun, 29 Dec 2024 23:57:55 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/redis%E6%89%8B%E5%86%8C%E8%87%AA%E7%94%A8/</guid>
      <description>This is a page about »Redis手册(自用)«.
redis操作手册&amp;ndash;自用 访问redis 服务器，并测试 redis-cli -h host -p port -a password # 如果是直接在本地访问 redis-cli 127.0.0.1:6379&amp;gt; ping PONG 127.0.0.1:6379&amp;gt; ping zhangbuda &amp;#34;zhangbuda&amp;#34; 127.0.0.1:6379&amp;gt; 数据类型&amp;amp;增删改查 字符串、哈希、列表、集合、有序集合
字符串 127.0.0.1:6379&amp;gt; set zhangbuda 188 OK 127.0.0.1:6379&amp;gt; get zhangbuda &amp;#34;188&amp;#34; 127.0.0.1:6379&amp;gt; del zhangbuda (integer) 1 127.0.0.1:6379&amp;gt; get zhangbuda (nil) 127.0.0.1:6379&amp;gt; #######获取value 的长度(字符串) 、截取指定范围的内容(子字符串)、同时存储多个key、同时获取多个 key 的value、修改原来key的value，拼接字符串 set zhangbuda hello,world OK 127.0.0.1:6379&amp;gt; get zhangbuda &amp;#34;hello,world&amp;#34; 127.0.0.1:6379&amp;gt; getrange zhangbuda 2 4 &amp;#34;llo&amp;#34; 127.0.0.1:6379&amp;gt; getrange zhangbuda 0 4 &amp;#34;hello&amp;#34; 127.</description>
    </item>
    
    <item>
      <title>随写redis</title>
      <link>https://tutuwu2019.github.io/%E9%9A%8F%E5%86%99redis/</link>
      <pubDate>Sun, 08 Dec 2024 12:54:50 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/%E9%9A%8F%E5%86%99redis/</guid>
      <description>This is a page about »随写redis«.</description>
    </item>
    
    <item>
      <title>随写mysql</title>
      <link>https://tutuwu2019.github.io/%E9%9A%8F%E5%86%99mysql/</link>
      <pubDate>Sun, 08 Dec 2024 12:52:28 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/%E9%9A%8F%E5%86%99mysql/</guid>
      <description>This is a page about »随写mysql«.
关键字 mysql 主从复制 mysql 备份 sql优化 </description>
    </item>
    
    <item>
      <title>Sql_note</title>
      <link>https://tutuwu2019.github.io/sql_note/</link>
      <pubDate>Mon, 19 Aug 2024 23:30:26 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/sql_note/</guid>
      <description>This is a page about »Sql_note«.
sql_note 说来惭愧，之前sql 学的就不怎么样，总是写一些很low 的语句，然后现在数据量上来的，得把基础打的更扎实一些才好。
一些tips sql 其实很像一门脚本，当然 .sql 也确实是脚本语言，它也有一些脚本语言的特色(比如简洁)
当然 tips 也是一阵子一阵的持续更新
重命名 sql 的重命名有两种表示的方式，一个是用 as，另一个是直接写别名(当然哈，这就是省略了 as 关键字)
重命名 表名
select column_name as alias_name from table_name; # 省略关键字 select column_name alias_name from table_name; 重命名表名
select column_name from table_name as alias_name; 重命计算字段
select price * quantity as total from orders; 重命名子查询的结果
select alias_name.column_name from (select * from table_name) as alias_name; 往往 重命名会在一些复杂的语句中出现
基本规则 排序 order by desc/asc</description>
    </item>
    
    <item>
      <title>锁</title>
      <link>https://tutuwu2019.github.io/%E9%94%81/</link>
      <pubDate>Thu, 09 May 2024 17:34:01 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/%E9%94%81/</guid>
      <description>锁 都有哪些锁呢？
乐观锁 悲观锁 共享锁 排他锁 行锁 表锁 死锁 自旋锁 &amp;hellip; 锁1 Mysql/InnoDB锁
MySQL/InnoDB加锁 在数据库有高并发请求的时候，如何保证数据完整性？产生死锁问题如何排查以及解决？
面试 面试题1 面试题2 面试3</description>
    </item>
    
  </channel>
</rss>
