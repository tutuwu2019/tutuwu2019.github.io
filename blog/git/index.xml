<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on 张不大的博客</title>
    <link>https://tutuwu2019.github.io/blog/git/</link>
    <description>Recent content in git on 张不大的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>Copyright © 2024, zhangbdua.</copyright>
    <lastBuildDate>Tue, 19 Nov 2024 22:48:17 +0800</lastBuildDate><atom:link href="https://tutuwu2019.github.io/blog/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一些sql技巧</title>
      <link>https://tutuwu2019.github.io/%E4%B8%80%E4%BA%9Bsql%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Tue, 19 Nov 2024 22:48:17 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/%E4%B8%80%E4%BA%9Bsql%E6%8A%80%E5%B7%A7/</guid>
      <description>This is a page about »一些sql技巧«.
sql 的一些技巧 sql 与时间相关的用法 获取当前时间 now() 返回当前的日期和时间 (YYYY-MM-DD HH:MM:SS) current_date() 返回当前的日期 (YYYY-MM-DD) current_time() 返回当前的时间(HH:MM:SS) curdate() 返回当前的日期 类似 current_date curtime() 返回当前的时间 类似 current_time SELECT NOW(); -- 获取当前时间 SELECT CURRENT_DATE; -- 获取当前日期 日期与时间运算 date_add() 或 date_sub() 分别用来加、减指定的时间间隔 SELECT DATE_ADD(NOW(), INTERVAL 5 DAY); -- 当前时间加 5 天 SELECT DATE_SUB(NOW(), INTERVAL 2 HOUR); -- 当前时间减去 2 小时 比较日期和时间 日期比较，直接比较date、datetime字段，比如运算符 =、&amp;lt;、&amp;gt;、&amp;lt;=、&amp;gt;= SELECT * FROM orders WHERE order_date &amp;gt; &amp;#39;2024-01-01&amp;#39;; 时间区间比较，通过 between 操作符在指定时间范围内查询记录</description>
    </item>
    
    <item>
      <title>Git_tips</title>
      <link>https://tutuwu2019.github.io/git_tips/</link>
      <pubDate>Thu, 16 May 2024 00:16:27 +0800</pubDate>
      
      <guid>https://tutuwu2019.github.io/git_tips/</guid>
      <description>This is a page about »Git_tips«.
git tips 老实讲，git 的很多功能我还不是很熟，常用吧，用着用着就熟悉了
本地git仓库被污染了 是这样的，hugo 博客在编写完了，然后hugo 生成静态页，hugo server 正常，但是 git push 迟迟没有更新
大概率是本地的git 仓库被污染了。
其实环境被污染，挺难处理的，尤其是《新手》、《对这个环境不熟》
我甚至想暴力把github 仓库删除，重新创建。
后来误打误撞的解决了
# 先创建一个 git checkout --orphan temp # 创建一个新的孤立分支 # 创建一个空的提交 什么是空的提交？空的提交就是什么也没有改变，和原来的一样。 默认git 是不允许的，但是可以采用 --allow-empty 强制空提交 # 在这个特定的情况下，你使用这个命令的目的是为了在远程仓库中创建一个空的提交，以便清空远程仓库的内容。这个空的提交并没有任何实际的更改，但是它会在提交历史中留下一个标记，表示远程仓库在某个特定时间点被清空了。 git commit --allow-empty -m &amp;#34;Clear remote repository&amp;#34; # 删除本地的 main 分之 git branch -D main # 删除本地的 main 分支 # 将新的孤立分支重命名为 main git branch -m temp main git push origin main --force 注： git remote -v 查看远程远程仓库信息</description>
    </item>
    
  </channel>
</rss>
